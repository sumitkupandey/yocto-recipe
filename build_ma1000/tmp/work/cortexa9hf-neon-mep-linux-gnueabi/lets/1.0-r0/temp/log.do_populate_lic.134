DEBUG: Executing python function sstate_task_prefunc
DEBUG: Python function sstate_task_prefunc finished
DEBUG: Executing python function do_populate_lic
WARNING: Could not copy license file /home/linux/work/build_ma1000/tmp/work/cortexa9hf-neon-mep-linux-gnueabi/lets/1.0-r0/lets-1.0/COPYING.MIT to /home/linux/work/build_ma1000/tmp/work/cortexa9hf-neon-mep-linux-gnueabi/lets/1.0-r0/license-destdir/lets/COPYING.MIT: [Errno 2] No such file or directory: '/home/linux/work/build_ma1000/tmp/work/cortexa9hf-neon-mep-linux-gnueabi/lets/1.0-r0/lets-1.0/COPYING.MIT'
DEBUG: Python function do_populate_lic finished
DEBUG: Executing python function sstate_task_postfunc
DEBUG: Staging files from /home/linux/work/build_ma1000/tmp/work/cortexa9hf-neon-mep-linux-gnueabi/lets/1.0-r0/license-destdir to /home/linux/work/build_ma1000/tmp/deploy/licenses
NOTE: Using umask 002 (not 22) for sstate packaging
DEBUG: Preparing tree /home/linux/work/build_ma1000/tmp/work/cortexa9hf-neon-mep-linux-gnueabi/lets/1.0-r0/license-destdir for packaging at /home/linux/work/build_ma1000/tmp/work/cortexa9hf-neon-mep-linux-gnueabi/lets/1.0-r0/sstate-build-populate_lic/license-destdir
DEBUG: Executing python function sstate_hardcode_path
NOTE: Removing hardcoded paths from sstate package: 'find /home/linux/work/build_ma1000/tmp/work/cortexa9hf-neon-mep-linux-gnueabi/lets/1.0-r0/sstate-build-populate_lic/ \( -name "*.la" -o -name "*-config" -o -name "*_config" \) -type f | xargs grep -l -e '/home/linux/work/build_ma1000/tmp/sysroots/ma1000' | tee /home/linux/work/build_ma1000/tmp/work/cortexa9hf-neon-mep-linux-gnueabi/lets/1.0-r0/sstate-build-populate_lic/fixmepath | xargs --no-run-if-empty sed -i -e 's:/home/linux/work/build_ma1000/tmp/sysroots/ma1000:FIXMESTAGINGDIRHOST:g''
DEBUG: Python function sstate_hardcode_path finished
DEBUG: Executing shell function sstate_create_package
DEBUG: Shell function sstate_create_package finished
DEBUG: Executing python function sstate_sign_package
DEBUG: Python function sstate_sign_package finished
DEBUG: Python function sstate_task_postfunc finished
